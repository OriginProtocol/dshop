events {
  worker_connections 1024;
}

http {
  include mime.types;
  default_type application/octet-stream;
  sendfile on;

  # Sufficient for ~1000 separate domains
  lua_shared_dict auto_ssl 10m;

  # The "auto_ssl" shared dict is used to temporarily store various settings
  # like the secret used by the hook server on port 8999. Do not change or
  # omit it.
  lua_shared_dict auto_ssl_settings 64k;

  # A DNS resolver must be defined for OCSP stapling to function.
  # resolver 8.8.8.8 ipv6=off;
  # This should always be the GKE CoreDNS address
  resolver $NGINX_RESOLVER_IP ipv6=off;

  # Initial setup tasks.
  init_by_lua_block {
      auto_ssl = (require "resty.auto-ssl").new()
      auto_ssl:set("ca", "https://acme-v02.api.letsencrypt.org/directory")
      auto_ssl:set("storage_adapter", "resty.auto-ssl.storage_adapters.redis")

      auto_ssl:set("redis", {
        host = "$REDIS_HOST",
        port = "$REDIS_PORT",
        db = "$REDIS_DB"
      })

      --- Allow all domains
      auto_ssl:set("allow_domain", function(domain)
        return true
      end)

      auto_ssl:init()
  }

  init_worker_by_lua_block {
      auto_ssl:init_worker()
  }

  # Internal server running on port 8999 for handling certificate tasks.
  server {
      listen 127.0.0.1:8999;

      # Increase the body buffer size, to ensure the internal POSTs can always
      # parse the full POST contents into memory.
      client_body_buffer_size 128k;
      client_max_body_size 128k;

      location / {
        content_by_lua_block {
          auto_ssl:hook_server()
        }
      }
  }

  server {
    listen 80 default_server;

    # Access for LetsEncrypt
    location /.well-known/acme-challenge/ {
      auth_basic off;
      content_by_lua_block {
          auto_ssl:challenge_server()
      }
    }

    # Force HTTPS
    location / {
      return 301 https://$host$request_uri;
    }
  }

  server {
    listen 443 ssl;

    # Dynamic handler for issuing or returning certs for SNI domains.
    ssl_certificate_by_lua_block {
      auto_ssl:ssl_certificate()
    }

    # Define a fallback certificate so nginx can start
    ssl_certificate /etc/resty-auto-ssl/resty-auto-ssl-fallback.crt;
    ssl_certificate_key /etc/resty-auto-ssl/resty-auto-ssl-fallback.key;

    # certs sent to the client in SERVER HELLO are concatenated in ssl_certificate
    ssl_session_timeout 1d;
    ssl_session_cache shared:SSL:50m;
    ssl_session_tickets off;

    # Diffie-Hellman parameter for DHE ciphersuites, recommended 2048 bits
    ssl_dhparam /etc/resty-auto-ssl/dhparam.pem;

    # intermediate configuration. tweak to your needs.
    ssl_protocols TLSv1 TLSv1.1 TLSv1.2;
    ssl_ciphers 'ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:DHE-RSA-AES128-GCM-SHA256:DHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-AES128-SHA256:ECDHE-RSA-AES128-SHA256:ECDHE-ECDSA-AES128-SHA:ECDHE-RSA-AES256-SHA384:ECDHE-RSA-AES128-SHA:ECDHE-ECDSA-AES256-SHA384:ECDHE-ECDSA-AES256-SHA:ECDHE-RSA-AES256-SHA:DHE-RSA-AES128-SHA256:DHE-RSA-AES128-SHA:DHE-RSA-AES256-SHA256:DHE-RSA-AES256-SHA:ECDHE-ECDSA-DES-CBC3-SHA:ECDHE-RSA-DES-CBC3-SHA:EDH-RSA-DES-CBC3-SHA:AES128-GCM-SHA256:AES256-GCM-SHA384:AES128-SHA256:AES256-SHA256:AES128-SHA:AES256-SHA:DES-CBC3-SHA:!DSS';
    ssl_prefer_server_ciphers on;

    # HSTS (ngx_http_headers_module is required) (15768000 seconds = 6 months)
    # uncomment if you are sure you'll never drop HTTPS support
    # add_header Strict-Transport-Security max-age=15768000;
    location / {
      proxy_pass http://$SERVER_ENDPOINT;
      proxy_set_header Host $host;
      proxy_set_header X-Real-IP $remote_addr;
      proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
      proxy_set_header X-Forwarded-Proto $scheme;
      proxy_buffering off;

      more_clear_headers "Server: ";
      more_set_headers "X-Frame-Options: SAMEORIGIN";
      more_set_headers "X-Content-Type-Options: nosniff";
      more_set_headers "X-XSS-Protection: 1";
      more_set_headers "Strict-Transport-Security: max-age=31536000";
      more_set_headers "Expect-CT: max-age=86400";
      more_set_headers "Feature-Policy: microphone 'none'";
      more_set_headers "Content-Security-Policy: default-src https: 'unsafe-inline' 'unsafe-eval'; img-src https: data: blob:; frame-src https: 'unsafe-inline' 'unsafe-eval';";
      more_set_headers "Permissions-Policy: interest-cohort=()";
    }
  }
}
