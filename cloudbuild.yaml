---
substitutions:
    _NAMESPACE: experimental
    _IMAGE_NAME: dshop-backend

steps:
  - id: 'Configure network name'
    name: 'gcr.io/cloud-builders/docker'
    entrypoint: 'sh'
    args:
      - '-c'
      - |
        # Write network to file for future usage
        case "$BRANCH_NAME" in
          stable)
            echo "mainnet" > .network
            ;;
          *)
            echo "rinkeby" > .network
            ;;
        esac

  - id: 'Create unique build tag'
    name: 'gcr.io/cloud-builders/docker'
    entrypoint: '/bin/bash'
    args:
      - '-c'
      - 'date +%Y%m%d%H%M%s > .tag'

  - id: 'Build docker image'
    name: 'gcr.io/cloud-builders/docker'
    entrypoint: '/bin/bash'
    args:
      - '-c'
      - |
        docker build \
            -f ./devops/Dockerfile \
            -t "gcr.io/$PROJECT_ID/${_NAMESPACE}/${_IMAGE_NAME}:$(cat .tag)" \
            --build-arg SENTRY_DSN=${_SENTRY_DSN} \
            $(pwd)

  - id: 'Push the image to GCR'
    name: 'gcr.io/cloud-builders/docker'
    entrypoint: '/bin/bash'
    args:
      - '-c'
      - |
        docker push \
          gcr.io/$PROJECT_ID/${_NAMESPACE}/${_IMAGE_NAME}:$(cat .tag)

  - id: 'Tag the image'
    name: 'gcr.io/cloud-builders/gcloud'
    entrypoint: '/bin/bash'
    args:
      - '-c'
      - |
        gcloud container images add-tag \
          "gcr.io/$PROJECT_ID/${_NAMESPACE}/${_IMAGE_NAME}:$(cat .tag)" \
          "gcr.io/$PROJECT_ID/${_NAMESPACE}/${_IMAGE_NAME}:latest" \
          --quiet

        if [[ "$BRANCH_NAME" == "stable" ]]; then
          gcloud container images add-tag \
            "gcr.io/$PROJECT_ID/${_NAMESPACE}/${_IMAGE_NAME}:$(cat .tag)" \
            "gcr.io/$PROJECT_ID/${_NAMESPACE}/${_IMAGE_NAME}:mainnet" \
            --quiet
        fi

  - id: 'Update the StatefulSet'
    name: 'gcr.io/cloud-builders/kubectl'
    env:
      - 'CLOUDSDK_COMPUTE_ZONE=us-west1-a'
      - 'CLOUDSDK_CONTAINER_CLUSTER=origin'
    entrypoint: '/bin/bash'
    args:
      - '-c'
      - |
        gcloud container clusters get-credentials "$$CLOUDSDK_CONTAINER_CLUSTER" \
          --project "$(gcloud config get-value core/project)" \
          --zone "$(gcloud config get-value compute/zone)"

        export STS_NAME="${_NAMESPACE}-${_IMAGE_NAME}-$(cat .network)"
        export PATCH_JSON="[{ \
          \"op\": \"replace\", \
          \"path\": \"/spec/template/spec/containers/0/image\", \
          \"value\": \"gcr.io/$PROJECT_ID/${_NAMESPACE}/${_IMAGE_NAME}:$(cat .tag)\" \
        }]"

        kubectl -n ${_NAMESPACE} patch statefulset $$STS_NAME --type='json' \
          -p="$$PATCH_JSON"
      
timeout: '1800s'
